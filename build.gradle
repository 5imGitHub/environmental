buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://dist.creeper.host/Sponge/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "eclipse"
apply plugin: "maven-publish"
apply plugin: "org.spongepowered.mixin"

mixin {
    add sourceSets.main, "environmental.refmap.json"
}

version = "${project.minecraft}-${project.modVersion}"
group = "com.minecraftabnormals"
archivesBaseName = project.modId

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"

minecraft {
    mappings channel: project.mappingsChannel, version: project.mappings
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            property "mixin.env.disableRefMap", "true"
            arg "-mixin.config=environmental.mixins.json"
            mods {
                environmental {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            property "mixin.env.disableRefMap", "true"
            arg "-mixin.config=environmental.mixins.json"
            mods {
                environmental {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            args "--mod", "environmental", "--all", "--output", file("src/generated/resources/")
            mods {
                environmental {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "CurseForge"
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft}-${project.forge}"
    implementation fg.deobf("curse.maven:abnormals-core:${project.abnormalsCore}")
    
    compileOnly fg.deobf("mezz.jei:jei-${project.minecraft}:${project.jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.minecraft}:${project.jei}")
}

processResources {
    inputs.property "name", project.modName
    inputs.property "version", project.modVersion
    inputs.property "id", project.modId
    filesMatching(["META-INF/mods.toml", "pack.mcmeta"]) {
        expand "name": project.modName, "version": project.modVersion, "id": project.modId
    }
}


jar {
    manifest {
        attributes([
            "Specification-Title": project.name,
            "Specification-Vendor": "Team Abnormals",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": project.modVersion,
            "Implementation-Vendor": "Team Abnormals",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "environmental.mixins.json"
        ])
    }
}